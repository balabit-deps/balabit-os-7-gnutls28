From d39778e43d1674cb3ab3685157fd299816d535c0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Tim=20R=C3=BChsen?= <tim.ruehsen@gmx.de>
Date: Tue, 12 Feb 2019 15:09:11 +0100
Subject: [PATCH] Automatically NULLify after gnutls_free()
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This method prevents direct use-after-free and
double-free issues.

Signed-off-by: Tim RÃ¼hsen <tim.ruehsen@gmx.de>
---
 NEWS                            | 13 +++++++++++++
 lib/includes/gnutls/gnutls.h.in |  4 ++++
 2 files changed, 17 insertions(+)

#diff --git a/NEWS b/NEWS
#index b171ef71e8..a59c12091f 100644
#--- a/NEWS
#+++ b/NEWS
#@@ -7,6 +7,19 @@ See the end for copying conditions.
# 
# * Version 3.6.7 (unreleased)
# 
#+** libgnutls, gnutls tools: Every gnutls_free() will automatically set
#+   the free'd pointer to NULL. This prevents possible use-after-free and
#+   double free issues. Use-after-free will be turned into NULL dereference.
#+   The counter-measure does not extend to applications using gnutls_free().
#+
#+** libgnutls, gnutls tools: Every gnutls_free() will automatically set
#+   the free'd pointer to NULL. This prevents possible use-after-free and
#+   double free issues. Use-after-free will be turned into NULL dereference,
#+   effectively turning harmful attacks like remote-code-executions (RCE) into
#+   segmentation faults. Double frees may also be used to achieve RCEs - turning
#+   them into no-ops counter measures this attack at this point. 
#+   This measurement is only active when building libgnutls and the gnutls tools.
#+   
# ** libgnutls: enforce key usage limitations on certificates more actively.
#    Previously we would enforce it for TLS1.2 protocol, now we enforce it
#    even when TLS1.3 is negotiated, or on client certificates as well. When
Index: gnutls28-3.5.18/lib/includes/gnutls/gnutls.h.in
===================================================================
--- gnutls28-3.5.18.orig/lib/includes/gnutls/gnutls.h.in	2019-05-28 13:16:48.712685376 -0400
+++ gnutls28-3.5.18/lib/includes/gnutls/gnutls.h.in	2019-05-28 13:16:48.708685359 -0400
@@ -1837,6 +1837,10 @@ extern _SYM_EXPORT gnutls_realloc_functi
 extern _SYM_EXPORT gnutls_calloc_function gnutls_calloc;
 extern _SYM_EXPORT gnutls_free_function gnutls_free;
 
+#ifdef GNUTLS_INTERNAL_BUILD
+#define gnutls_free(a) gnutls_free((void *) (a)), a=NULL
+#endif
+
 extern _SYM_EXPORT char *(*gnutls_strdup) (const char *);
 
 /* a variant of memset that doesn't get optimized out */
